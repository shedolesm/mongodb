NAME:-
ROLL NO:-
TITLE:-Writing cursors.


*******Q1**********
CREATE TABLE STUDENT_B(ROLL NUMBER(3) PRIMARY KEY,
FNAME VARCHAR(10),
LNAME VARCHAR(10),
BRANCH VARCHAR(25));

Table created.

SQL>  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH');
Enter value for roll: 1
Enter value for fname: SMITA
Enter value for lname: JOG
Enter value for branch: COMPUTER_SCIENCE
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(1,'SMITA','JOG','COMPUTER_SCIENCE')

1 row created.

SQL> /
Enter value for roll: 02
Enter value for fname: SUNIL 
Enter value for lname: ZHA
Enter value for branch: IT
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(02,'SUNIL ','ZHA','IT')

1 row created.

SQL> /
Enter value for roll: 03
Enter value for fname: AARYA
Enter value for lname: PUNEKAR
Enter value for branch: COMPUTER_SCIENCE
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(03,'AARYA','PUNEKAR','COMPUTER_SCIENCE')

1 row created.

SQL> /
Enter value for roll: 04
Enter value for fname: RAVI
Enter value for lname: SHARMA
Enter value for branch: ENTC
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(04,'RAVI','SHARMA','ENTC')

1 row created.

SQL> /
Enter value for roll: 05
Enter value for fname: PRAKASH 
Enter value for lname: VERMA
Enter value for branch: COMPUTER_SCIENCE
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(05,'PRAKASH ','VERMA','COMPUTER_SCIENCE')

1 row created.

SQL> /
Enter value for roll: 06
Enter value for fname: PURVI
Enter value for lname: PATIL
Enter value for branch: ENTC
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(06,'PURVI','PATIL','ENTC')

1 row created.

SQL> /
Enter value for roll: 07
Enter value for fname: RAKESH
Enter value for lname: PAWAR
Enter value for branch: IT
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(07,'RAKESH','PAWAR','IT')

1 row created.

SQL> /
Enter value for roll: 08
Enter value for fname: SOURABH
Enter value for lname: SHUKLA
Enter value for branch: COMPUTER_SCIENCE
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(08,'SOURABH','SHUKLA','COMPUTER_SCIENCE')

1 row created.

SQL> /
Enter value for roll: 09
Enter value for fname: SHUBHA
Enter value for lname: GOKHALE
Enter value for branch: COMPUTER_SCIENCE
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(09,'SHUBHA','GOKHALE','COMPUTER_SCIENCE')

1 row created.

SQL> /
Enter value for roll: 10
Enter value for fname: GEETA
Enter value for lname: SHAH
Enter value for branch: IT
old   1:  INSERT INTO STUDENT_B VALUES(&ROLL,'&FNAME','&LNAME','&BRANCH')
new   1:  INSERT INTO STUDENT_B VALUES(10,'GEETA','SHAH','IT')

1 row created.

SQL>  SELECT * FROM STUDENT_B;

      ROLL FNAME      LNAME      BRANCH
---------- ---------- ---------- -------------------------
         1 SMITA      JOG        COMPUTER_SCIENCE
         2 SUNIL      ZHA        IT
         3 AARYA      PUNEKAR    COMPUTER_SCIENCE
         4 RAVI       SHARMA     ENTC
         5 PRAKASH    VERMA      COMPUTER_SCIENCE
         6 PURVI      PATIL      ENTC
         7 RAKESH     PAWAR      IT
         8 SOURABH    SHUKLA     COMPUTER_SCIENCE
         9 SHUBHA     GOKHALE    COMPUTER_SCIENCE
        10 GEETA      SHAH       IT

10 rows selected.

DECLARE
ROLL1 STUDENT_B.ROLL%TYPE;
FNAME1 STUDENT_B.FNAME%TYPE;
LNAME1 STUDENT_B.LNAME%TYPE;
BRANCH1 STUDENT_B.BRANCH%TYPE;
CURSOR C1 IS SELECT * FROM STUDENT_B
WHERE BRANCH='COMPUTER_SCIENCE';
BEGIN
OPEN C1;
IF C1%ISOPEN THEN
LOOP
FETCH C1 INTO ROLL1,FNAME1,LNAME1,BRANCH1;
EXIT WHEN C1%NOTFOUND;
DBMS_OUTPUT.PUT_LINE(ROLL1||'         '||FNAME1||'         '||LNAME1||'              '||BRANCH1);
END LOOP;
END IF;
CLOSE C1;
END;
/

1         SMITA         JOG              COMPUTER_SCIENCE
3         AARYA         PUNEKAR              COMPUTER_SCIENCE
5         PRAKASH          VERMA              COMPUTER_SCIENCE
8         SOURABH         SHUKLA              COMPUTER_SCIENCE
9         SHUBHA         GOKHALE              COMPUTER_SCIENCE 

PL/SQL procedure successfully completed.

***********Q2*************

DECLARE
ROLL1 STUDENT_B.ROLL%TYPE;
FNAME1 STUDENT_B.FNAME%TYPE;
LNAME1 STUDENT_B.LNAME%TYPE;
BRANCH1 STUDENT_B.BRANCH%TYPE;
CURSOR C2 IS SELECT * FROM STUDENT_B
WHERE ROLL= 100;
BEGIN
OPEN C2;
IF C2%ISOPEN THEN
FETCH C2 INTO ROLL1,FNAME1,LNAME1,BRANCH1;
IF C2%NOTFOUND THEN
INSERT INTO STUDENT_B VALUES(100,'RAM','BABU','ENTC');
ELSE
UPDATE STUDENT_B
SET BRANCH='ENTC'WHERE ROLL=ROLL1;
END IF;
END IF;
CLOSE C2;
END;
/

PL/SQL procedure successfully completed.

SQL> SELECT * FROM STUDENT_B;

      ROLL FNAME      LNAME      BRANCH
---------- ---------- ---------- -------------------------
         1 SMITA      JOG        COMPUTER_SCIENCE
         2 SUNIL      ZHA        IT
         3 AARYA      PUNEKAR    COMPUTER_SCIENCE
         4 RAVI       SHARMA     ENTC
         5 PRAKASH    VERMA      COMPUTER_SCIENCE
         6 PURVI      PATIL      ENTC
         7 RAKESH     PAWAR      IT
         8 SOURABH    SHUKLA     COMPUTER_SCIENCE
         9 SHUBHA     GOKHALE    COMPUTER_SCIENCE
        10 GEETA      SHAH       IT
       100 RAM        BABU       ENTC

11 rows selected.

**********Q3************

CREATE TABLE EMPLOYEE(ENO NUMBER(2) PRIMARY KEY,
DNO NUMBER(2));

Table created.

SQL>  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY);
Enter value for eno: 1
Enter value for dno: 20
Enter value for salary: 2000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(1,20, 2000)

1 row created.

SQL> /
Enter value for eno: 2
Enter value for dno: 30
Enter value for salary: 4000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(2,30, 4000)

1 row created.

SQL> /
Enter value for eno: 3
Enter value for dno: 20
Enter value for salary: 5000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(3,20, 5000)

1 row created.

SQL> /
Enter value for eno: 4
Enter value for dno: 30
Enter value for salary: 1000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(4,30, 1000)

1 row created.

SQL> /
Enter value for eno: 5
Enter value for dno: 10
Enter value for salary: 5000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(5,10, 5000)

1 row created.

SQL> /
Enter value for eno: 6
Enter value for dno: 20
Enter value for salary: 6000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(6,20, 6000)

1 row created.

SQL> /
Enter value for eno: 7
Enter value for dno: 30
Enter value for salary: 7000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(7,30, 7000)

1 row created.

SQL> /
Enter value for eno: 8
Enter value for dno: 40
Enter value for salary: 2000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(8,40, 2000)

1 row created.

SQL> /
Enter value for eno: 9
Enter value for dno: 40
Enter value for salary: 3000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(9,40, 3000)

1 row created.

SQL> /
Enter value for eno: 10
Enter value for dno: 10
Enter value for salary: 2000
old   1:  INSERT INTO EMPLOYEE VALUES(&ENO,&DNO, &SALARY)
new   1:  INSERT INTO EMPLOYEE VALUES(10,10, 2000)

1 row created.


SQL> SELECT * FROM EMPLOYEE;

       ENO        DNO     SALARY
---------- ---------- ----------
         1         20       2000
         2         30       4000
         3         20       5000
         4         30       1000
         5         10       5000
         6         20       6000
         7         30       7000
         8         40       2000
         9         40       3000
        10         10       2000

10 rows selected.

DECLARE
CURSOR C0 IS SELECT * FROM EMPLOYEE WHERE DNO=20;
CURSOR C1 IS SELECT * FROM EMPLOYEE  WHERE DNO=30;
CURSOR C2 IS SELECT * FROM EMPLOYEE  WHERE DNO NOT IN (20,30);
F1 EMPLOYEE %ROWTYPE;
F2 EMPLOYEE %ROWTYPE;
F3 EMPLOYEE %ROWTYPE;
BEGIN
OPEN C0;
LOOP
FETCH C0 INTO F1;
UPDATE EMPLOYEE  SET SALARY=F1.SALARY+F1.SALARY*0.05 WHERE DNO=F1.DNO;
EXIT WHEN C0%NOTFOUND;
END LOOP;
CLOSE C0;

OPEN C1;
LOOP
FETCH C1 INTO F2;
UPDATE EMPLOYEE  SET SALARY=F2.SALARY+F2.SALARY*0.1 WHERE DNO=F2.DNO;
EXIT WHEN C1%NOTFOUND;
END LOOP;
CLOSE C1;

OPEN C2;
LOOP
FETCH C2 INTO F3;
UPDATE EMPLOYEE  SET SALARY=F3.SALARY+F3.SALARY*0.075 WHERE DNO=F3.DNO;
EXIT WHEN C2%NOTFOUND;
END LOOP;
CLOSE C2;
END;
/

PL/SQL procedure successfully completed.

SQL> SELECT * FROM EMPLOYEE;

       ENO        DNO     SALARY
---------- ---------- ----------
         1         20       6300
         2         30       7700
         3         20       6300
         4         30       7700
         5         10       2150
         6         20       6300
         7         30       7700
         8         40       3225
         9         40       3225
        10         10       2150

10 rows selected.

SQL> UPDATE EMPLOYEE SET SALARY=2000 WHERE ENO=1;

1 row updated.

SQL> UPDATE EMPLOYEE SET SALARY=4000 WHERE ENO=2;

1 row updated.

SQL> UPDATE EMPLOYEE SET SALARY=5000 WHERE ENO=3;

1 row updated.

SQL> UPDATE EMPLOYEE SET SALARY=1000 WHERE ENO=4;

1 row updated.

SQL>  UPDATE EMPLOYEE SET SALARY=5000 WHERE ENO=5;

1 row updated.

SQL>  UPDATE EMPLOYEE SET SALARY=6000 WHERE ENO=6;

1 row updated.

SQL>  UPDATE EMPLOYEE SET SALARY=7000 WHERE ENO=7;

1 row updated.

SQL>  UPDATE EMPLOYEE SET SALARY=2000 WHERE ENO=8;

1 row updated.

SQL>  UPDATE EMPLOYEE SET SALARY=3000 WHERE ENO=9;

1 row updated.

SQL>  UPDATE EMPLOYEE SET SALARY=2000 WHERE ENO=10;

1 row updated.

SQL> SELECT * FROM EMPLOYEE;

       ENO        DNO     SALARY
---------- ---------- ----------
         1         20       2000
         2         30       4000
         3         20       5000
         4         30       1000
         5         10       5000
         6         20       6000
         7         30       7000
         8         40       2000
         9         40       3000
        10         10       2000

10 rows selected.


*******************************************************

SQL> create table empl(eno number(3),dno number(3),salary number(7));

Table created.

SQL> insert into empl values(&eno,&dno,&salary);
Enter value for eno: 1
Enter value for dno: 10
Enter value for salary: 1000
old   1: insert into empl values(&eno,&dno,&salary)
new   1: insert into empl values(1,10,1000)

1 row created.

SQL> /
Enter value for eno: 2
Enter value for dno: 20
Enter value for salary: 2000
old   1: insert into empl values(&eno,&dno,&salary)
new   1: insert into empl values(2,20,2000)

1 row created.

SQL> /
Enter value for eno: 3
Enter value for dno: 30
Enter value for salary: 3000
old   1: insert into empl values(&eno,&dno,&salary)
new   1: insert into empl values(3,30,3000)

1 row created.

SQL> /
Enter value for eno: 4
Enter value for dno: 20
Enter value for salary: 4000
old   1: insert into empl values(&eno,&dno,&salary)
new   1: insert into empl values(4,20,4000)

1 row created.

SQL> /
Enter value for eno: 5
Enter value for dno: 30
Enter value for salary: 2000
old   1: insert into empl values(&eno,&dno,&salary)
new   1: insert into empl values(5,30,2000)

1 row created.

SQL> select * from empl;

       ENO        DNO     SALARY
---------- ---------- ----------
         1         10       1000
         2         20       2000
         3         30       3000
         4         20       4000
         5         30       2000

Declare
cursor update1 Is select * from empl;
a empl%Rowtype;
Begin
Open update1;
Loop
fetch update1 into a;
Exit when update1%notfound;

If a.dno=20 then
update empl set salary=a.salary+(.05)*a.salary where dno=20;
elsif a.dno=30 then
update empl set salary=a.salary+(.1)*a.salary where dno=30;
else
update empl set salary=a.salary+(.075)*a.salary where dno not in (20,30);
End if;
End loop;
close update1;
End;
/

PL/SQL procedure successfully completed.

SQL> select * from empl;

       ENO        DNO     SALARY
---------- ---------- ----------
         1         10       1075
         2         20       4200
         3         30       2200
         4         20       4200
         5         30       2200